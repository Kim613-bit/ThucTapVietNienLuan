<?php
// register.php
include "db.php";       // K·∫øt n·ªëi PostgreSQL: $conn
session_start();

// Kh·ªüi t·∫°o bi·∫øn
$success = "";
$old     = [];          // L∆∞u l·∫°i gi√° tr·ªã ƒë√£ nh·∫≠p
$errors  = [];          // M·∫£ng l·ªói chi ti·∫øt

if ($_SERVER["REQUEST_METHOD"] === "POST") {
    // 1. Sanitize v√† l·∫•y gi√° tr·ªã
    $old['username']  = trim($_POST["username"]  ?? "");
    $old['password']  =             $_POST["password"]  ?? "";
    $old['confirm']   =             $_POST["confirm"]   ?? "";
    $old['fullname']  = trim($_POST["fullname"]  ?? "");
    $old['birthyear'] =             $_POST["birthyear"] ?? "";
    $old['email']     = trim($_POST["email"]     ?? "");

    // 2. Server-side validation

    // 2.1 Username: 1‚Äì50 k√Ω t·ª±, ch·ªâ ch·ªØ+s·ªë, kh√¥ng kho·∫£ng tr·∫Øng
    if (strlen($old['username']) < 1 || strlen($old['username']) > 50) {
        $errors['username'] = "T√™n ƒëƒÉng nh·∫≠p ph·∫£i t·ª´ 1‚Äì50 k√Ω t·ª±!";
    }
    elseif (!preg_match('/^[A-Za-z0-9]+$/', $old['username'])) {
        $errors['username'] = "T√™n ƒëƒÉng nh·∫≠p ch·ªâ ch·ª©a ch·ªØ v√† s·ªë, kh√¥ng c√≥ kho·∫£ng tr·∫Øng!";
    }

    // 2.2 Password & confirm
    if (!isset($errors['username'])) {
        if ($old['password'] !== $old['confirm']) {
            $errors['confirm'] = "M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!";
        }
        elseif (!preg_match('/^(?=.*[A-Z])(?=.*\d)(?=.*\W).{6,}$/', $old['password'])) {
            $errors['password'] = "M·∫≠t kh·∫©u t·ªëi thi·ªÉu 6 k√Ω t·ª±, √≠t nh·∫•t 1 ch·ªØ hoa, 1 s·ªë v√† 1 k√Ω t·ª± ƒë·∫∑c bi·ªát!";
        }
    }

    // 2.3 Fullname: ch·ªâ ch·ªØ (c√≥ d·∫•u) v√† kho·∫£ng tr·∫Øng
    if (!preg_match('/^[A-Za-z√Ä-·ªµ\s]+$/u', $old['fullname'])) {
        $errors['fullname'] = "H·ªç v√† t√™n ch·ªâ ch·ª©a ch·ªØ v√† kho·∫£ng tr·∫Øng!";
    }

    // 2.4 Email chu·∫©n RFC
    if (!filter_var($old['email'], FILTER_VALIDATE_EMAIL)) {
        $errors['email'] = "Email kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng!";
    }

    // 2.5 Birthyear: 1900 ‚Üí nƒÉm hi·ªán t·∫°i
    $by = intval($old['birthyear']);
    $cy = intval(date('Y'));
    if ($by < 1900 || $by > $cy) {
        $errors['birthyear'] = "NƒÉm sinh ph·∫£i t·ª´ 1900 ƒë·∫øn $cy!";
    }

    // 3. Ki·ªÉm tra tr√πng username trong DB
    if (empty($errors)) {
        $res = pg_query_params($conn,
            "SELECT id FROM users WHERE username = $1",
            [ $old['username'] ]
        );
        if ($res && pg_num_rows($res) > 0) {
            $errors['username'] = "T√™n ƒëƒÉng nh·∫≠p ƒë√£ t·ªìn t·∫°i!";
        }
    }

    // 4. L∆∞u user m·ªõi
    if (empty($errors)) {
        $hash = password_hash($old['password'], PASSWORD_DEFAULT);
        $res = pg_query_params($conn,
            "INSERT INTO users (username,password,fullname,birthyear,email)
             VALUES ($1,$2,$3,$4,$5)",
            [
              $old['username'],
              $hash,
              $old['fullname'],
              $by,
              $old['email']
            ]
        );
        if ($res) {
            $success = "T·∫°o t√†i kho·∫£n th√†nh c√¥ng! B·∫°n c√≥ th·ªÉ <a href='login.php'>ƒëƒÉng nh·∫≠p</a>.";
            $old = [];  // Xo√° d·ªØ li·ªáu c≈© n·∫øu c·∫ßn
        } else {
            $errors['general'] = "L·ªói khi t·∫°o t√†i kho·∫£n, vui l√≤ng th·ª≠ l·∫°i.";
        }
    }
}
?>
<!DOCTYPE html>
<html lang="vi">
<head>
  <meta charset="UTF-8">
  <title>ƒêƒÉng k√Ω t√†i kho·∫£n</title>
  <style>
    /* --- CSS c·ªßa b·∫°n --- */
    * { box-sizing: border-box; }
    body {
      font-family: Arial, sans-serif;
      background-color: #f1f1f1;
      margin:0; padding:0;
      display:flex; align-items:center; justify-content:center;
      min-height:100vh;
    }
    .container {
      background:#fff; padding:30px 35px;
      border-radius:12px;
      box-shadow:0 0 12px rgba(0,0,0,0.08);
      width:100%; max-width:400px;
    }
    h2 { text-align:center; margin-bottom:25px; font-size:22px; }
    input[type="text"],
    input[type="password"],
    input[type="number"],
    input[type="email"] {
      width:100%; padding:12px 15px; margin-bottom:5px;
      border:1px solid #ccc; border-radius:8px; font-size:15px;
    }
    .error { color:red; margin:5px 0 10px; font-size:14px; }
    .success { color:green; margin-bottom:10px; text-align:center; }
    button {
      width:100%; padding:12px; background:#28a745;
      color:#fff; font-size:16px; font-weight:bold;
      border:none; border-radius:8px; cursor:pointer;
      transition:background 0.2s;
    }
    button:hover { background:#218838; }
    .link, .back-button {
      text-align:center; margin-top:15px; font-size:14px;
    }
    .link a, .back-button { color:#007bff; text-decoration:none; }
    .link a:hover, .back-button:hover { text-decoration:underline; }
  </style>
</head>
<body>
  <div class="container">
    <h2>üìù ƒêƒÉng k√Ω t√†i kho·∫£n</h2>

    <!-- Hi·ªÉn th·ªã l·ªói chung ho·∫∑c th√†nh c√¥ng -->
    <?php if(!empty($errors['general'])): ?>
      <p class="error"><?= htmlspecialchars($errors['general']) ?></p>
    <?php endif; ?>
    <?php if($success): ?>
      <p class="success"><?= $success ?></p>
    <?php endif; ?>

    <form method="post" novalidate>
      <!-- Username -->
      <input
        type="text" name="username" placeholder="T√™n ƒëƒÉng nh·∫≠p"
        required maxlength="50"
        pattern="^[A-Za-z0-9]{1,50}$"
        title="1‚Äì50 k√Ω t·ª±, ch·ªâ ch·ªØ v√† s·ªë, kh√¥ng kho·∫£ng tr·∫Øng"
        value="<?= htmlspecialchars($old['username'] ?? '') ?>"
      />
      <div class="error"><?= $errors['username'] ?? '' ?></div>

      <!-- Password -->
      <input
        type="password" name="password"
        placeholder="M·∫≠t kh·∫©u (6+ k√Ω t·ª±, 1 hoa, 1 s·ªë, 1 ƒë·∫∑c bi·ªát)"
        required
        pattern="(?=.*[A-Z])(?=.*\d)(?=.*\W).{6,}"
        title="M·∫≠t kh·∫©u t·ªëi thi·ªÉu 6 k√Ω t·ª±, g·ªìm √≠t nh·∫•t 1 ch·ªØ hoa, 1 s·ªë v√† 1 k√Ω t·ª± ƒë·∫∑c bi·ªát"
      />
      <div class="error"><?= $errors['password'] ?? '' ?></div>

      <!-- Confirm Password -->
      <input
        type="password" name="confirm" placeholder="X√°c nh·∫≠n m·∫≠t kh·∫©u"
        required
        pattern="(?=.*[A-Z])(?=.*\d)(?=.*\W).{6,}"
        title="Ph·∫£i kh·ªõp v·ªõi m·∫≠t kh·∫©u ph√≠a tr√™n"
      />
      <div class="error"><?= $errors['confirm'] ?? '' ?></div>

      <!-- Fullname -->
      <input
        type="text" name="fullname" placeholder="H·ªç v√† t√™n"
        required
        pattern="^[A-Za-z√Ä-·ªµ\s]+$"
        title="Ch·ªâ ch·ª©a ch·ªØ v√† kho·∫£ng tr·∫Øng"
        value="<?= htmlspecialchars($old['fullname'] ?? '') ?>"
      />
      <div class="error"><?= $errors['fullname'] ?? '' ?></div>

      <!-- Birthyear -->
      <input
        type="number" name="birthyear" placeholder="NƒÉm sinh"
        required min="1900" max="<?= date('Y') ?>"
        value="<?= htmlspecialchars($old['birthyear'] ?? '') ?>"
      />
      <div class="error"><?= $errors['birthyear'] ?? '' ?></div>

      <!-- Email -->
      <input
        type="email" name="email" placeholder="Email"
        required
        value="<?= htmlspecialchars($old['email'] ?? '') ?>"
      />
      <div class="error"><?= $errors['email'] ?? '' ?></div>

      <button type="submit">ƒêƒÉng k√Ω</button>
    </form>

    <a href="login.php" class="back-button">‚Üê Quay l·∫°i ƒëƒÉng nh·∫≠p</a>
    <div class="link">
      ƒê√£ c√≥ t√†i kho·∫£n? <a href="login.php">ƒêƒÉng nh·∫≠p</a>
    </div>
  </div>

  <script>
    // X√°c nh·∫≠n tr∆∞·ªõc khi submit (tu·ª≥ ch·ªçn)
    document.querySelector("form").addEventListener("submit", function(e) {
      if (!confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën t·∫°o t√†i kho·∫£n kh√¥ng?")) {
        e.preventDefault();
      }
    });
  </script>
</body>
</html>
